user
	id		数字
	username	5-16
	password	32
	email		
	time		--
	motto

create table user(
id int auto_increment primary key,
username varchar(16) unique key,
password varchar(32) not null,
email varchar(128),
time timestamp default now(),
motto varchar(512)
)

ai
	id		数字
	AIname		5-16
	userid		数字
	type		1 public 2private 3 deleted
	time		--
	language	数字
	sourcecode	65536
create table ai(
id int auto_increment primary key,
AIname varchar(16) not null,userid int not null,
type int1 not null,
time timestamp default now(),
language int not null,sourcecode text
)

status
	id		数字
	Aid		数字
	Bid		数字
	win		数字 
	sum		数字(无效为0)
	result		数字 1A获胜 2B获胜 0平局 -1waiting >=3无效
	resultInfo	TLE
	time		--
	log		10M
create table status(
id int auto_increment primary key,
Aid int not null,
Bid int not null,
win int,
sum int,
result int,
resultInfo varchar(512),
time timestamp default now(),
log MEDIUMBLOB
)


contest
	id		数字
	name		512以下
	ai		JSON  [{参赛aiID,积分},{}] 按排名
	time		--
	log		JSON [{ai1,ai2},{}...] (这里的ai是从小到大第几个)
	result		-1表示没到时间,0表示正在测,1表示测完了
create table contest(id int auto_increment primary 

key,name varchar(512),ai text,time timestamp default 0,log 

text,result int not null);

contest[]{
	id
	ai = [{id,score<-result>=0才有,OPscore<-result>=0才有,num<-result=0才有}]   
	log = [{id,result,ai1,ai2}]   <-result=0才有
	allturn = log(ai.length)*2-1  <-result=0才有
	nowturn = 当前轮数   <-result=0才有
	//time = 开始时间
	result
	aimap <-result=0
}
contest(id,name,time,ai,result,log)
contest.contestStart
contest.getNextJudge -> [a,b] 失败undefined
contest.roundFinish -> [a,b] 失败undefined
contest.allfinish
contest.saveContestloop

database.loadContest()
database.saveContest(this)
database.makebattle(id1,id2,callback(result));
database.addContest(_name,time,callback)
database.getContest()
database.judgeEmitter
database.contestArr

database.checkuser(username,password,callback(userid (=-1 if wrong)))

database.register(req.body.username,req.body.password,req.body.email,req.body.motto,callback(err))

database.updateuser(userid,req.body.password,req.body.email,req.body.motto,function(err){
function submitAI(userid,AIname,type,language,sourcecode,callback)
database.deleteAI(req.query.id,function(err){
database.getSourcecode(req.query.id),function(language,sourcecode)
database.battle(req.body.player1,req.body.player2,function(err){
database.getStatus(req.query.down,req.query.top,function(status){



allbot=database.getPublicAI(); 按用户名-ai名排列
var user = database.getAllUser(); 按排名
var AI=getAllAI();
database.getUserbyID(id);
database.getAIbyID()
database.getJudgeContent(function(content){
	content[id,source1,source2]
database.judge(content,callback)
	content[id,result,resultInfo,log]
{"id":1,"result":1,"resultInfo":"<font color=red>Time Limit Exceeded<font>","log":"asd"}
database.getLog(req.query.id,function(log){


var userNamelist;
var publicAI; //按用户名-ai名排列 sortarr
var userranklist; sortarr
var AIranklist; sortarr
var userIDlist;
var AIIDlist;

user.id
user.username
user.email
user.motto
user.time
//user.allAInum
user.allStatusNum
user.winStatusNum
user.allOPnum
user.winOPnum
user.rank
user.score
user.publicAI 按排名
user.allAI 包含删除按时间


ai.id
ai.AIname
ai.userid
ai.user
ai.type
ai.time
ai.allStatusNum
ai.winStatusNum
AI.allOPnum
AI.winOPnum
ai.rank
ai.score


修改score
局面加上无效